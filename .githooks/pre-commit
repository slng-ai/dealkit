#!/bin/bash
# Pre-commit hook to enforce workspace structure rules

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${YELLOW}Running workspace structure validation...${NC}"

# Get the root directory
ROOT_DIR=$(git rev-parse --show-toplevel)

# Run the audit script
if [ -f "$ROOT_DIR/audit_workspace.py" ]; then
    python3 "$ROOT_DIR/audit_workspace.py" > /tmp/audit_result.txt
    AUDIT_EXIT_CODE=$?
    
    if [ $AUDIT_EXIT_CODE -ne 0 ]; then
        echo -e "${RED}❌ Workspace structure validation failed!${NC}"
        echo ""
        tail -20 /tmp/audit_result.txt
        echo ""
        echo -e "${YELLOW}Fix the violations before committing.${NC}"
        exit 1
    fi
fi

# Check for forbidden patterns in staged files
FORBIDDEN_PATTERNS=(
    # No Python files in sales-toolkit
    "sales-toolkit/.*\.py$"
    # No customer profiles outside customers directory
    "^(?!customers/).*profile\.json$"
    # No templates outside designated areas
    "^(?!(sales-toolkit/templates/|customers/templates/)).*template_.*\.md$"
)

STAGED_FILES=$(git diff --cached --name-only)

for pattern in "${FORBIDDEN_PATTERNS[@]}"; do
    VIOLATIONS=$(echo "$STAGED_FILES" | grep -E "$pattern" || true)
    if [ -n "$VIOLATIONS" ]; then
        echo -e "${RED}❌ Forbidden file pattern detected:${NC}"
        echo "$VIOLATIONS"
        echo -e "${YELLOW}Pattern: $pattern${NC}"
        exit 1
    fi
done

# Check naming conventions for new files
while IFS= read -r file; do
    # Skip deletions
    if [ ! -f "$file" ]; then
        continue
    fi
    
    filename=$(basename "$file")
    dirname=$(dirname "$file")
    
    # Check Python files for snake_case
    if [[ "$filename" == *.py ]]; then
        if ! [[ "$filename" =~ ^[a-z_]+\.py$ ]]; then
            echo -e "${RED}❌ Python file not in snake_case: $file${NC}"
            exit 1
        fi
    fi
    
    # Check directory names for lowercase-hyphenated
    IFS='/' read -ra PARTS <<< "$dirname"
    for part in "${PARTS[@]}"; do
        if [[ "$part" != "." && "$part" != ".claude" && ! "$part" =~ ^[a-z-]+$ ]]; then
            if [[ ! "$part" =~ __pycache__ ]]; then
                echo -e "${RED}❌ Directory not lowercase-hyphenated: $part in $file${NC}"
                exit 1
            fi
        fi
    done
done <<< "$STAGED_FILES"

# Verify no cross-boundary violations
# Example: Check if customer data is being added outside customers/
CUSTOMER_DATA_OUTSIDE=$(echo "$STAGED_FILES" | grep -E "(health_metrics|profile)\.json" | grep -v "^customers/" || true)
if [ -n "$CUSTOMER_DATA_OUTSIDE" ]; then
    echo -e "${RED}❌ Customer data found outside customers directory:${NC}"
    echo "$CUSTOMER_DATA_OUTSIDE"
    exit 1
fi

echo -e "${GREEN}✅ Workspace structure validation passed!${NC}"
exit 0